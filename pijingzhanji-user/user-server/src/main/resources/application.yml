# 包名前缀
pijingzhanji-package-prefix: com.pijingzhanji

spring:
  # 多环境配置文件
  profiles:
    active: dev
  application:
    name: pijingzhanji-user-server
# 缓存
  cache:
    type: redis
# AOP
  aop:
    proxy-target-class: true
    auto: true
# 分页 page helper
pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql
# 压缩,这个属性样板打开了压缩选项，这样稍后应用到JSON正文的压缩就有保证了。
server:
  compression:
    enabled: true
    mime-types: application/json

# jwt 配置
jwt:
  # header中key,以改值为key在header中获取 request.getHeader('key')
  header: Authorization
  # 签名密钥
  secret: pijingzhanji
  # 过期时间,单位:秒
  expiration: 3600

# mybatis 枚举处理器包位置
mybatis:
  type-handlers-package: ${pijingzhanji-package-prefix}.handler
    
mybatis-plus:
  mapper-locations: com/pijingzhanji/mapper/xml/*.xml
  type-aliases-package: ${pijingzhanji-package-prefix}.domain
  global-config:
    # 主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    # 字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    # 驼峰下划线转换
    db-column-underline: true
    # 刷新mapper 调试神器
    refresh-mapper: true
    # 数据库大写下划线转换
    # capital-mode: true
    # 序列接口实现类配置
    # key-generator: com.baomidou.springboot.xxx
    # 逻辑删除配置
    # logic-delete-value: 0
    # logic-not-delete-value: 1
    # 自定义填充策略接口实现
    # meta-object-handler: com.baomidou.springboot.xxx
    # 自定义SQL注入器
    # sql-injector: com.baomidou.springboot.xxx
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    

  
# 自定义配置
pijingzhanji:
  basic-bean:
    enabled: true
  spring:
    cache:
      # 接口命名空间
      service-namespace:
        user-details-service: userDetailsService.namespace
  # 注入攻击处理
  filter:
    injection-attack-interceptor:
      enabled: false
  feign-ok-http-config:
    readTimeout: 60
    connectTimeout: 60
    writeTimeout: 180
  web-socket:
    enabled: true 
    client-broker-destination-prefixes: /topic
    server-application-destination-prefixes: /app 
    stomp-endpoints-paths: /pijingzhanji
      
# spring cloud feign http
feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true
    
# spring boot admin 监控 start
management:
  security:
    enabled: false
# spring boot admin 监控 end
